#!/bin/bash

# specify only exp-specific parameters
src=c11node9
dest=c11node10
router=c11node28

ganglia=10.244.36.20

# RTT = delay*2
rtt=180	# 180ms RTT
#rtt=80	# 80ms RTT
#rtt=20	# 20ms RTT
#rtt=0		# 0.4ms RTT (LAN)
delay=$(( rtt / 2 ))
#rtt=$(( delay * 2 ))ms

# ping or pong (dest to src)
turn=pong
#vwnds=( 1 2 3 4 5 6 7 8 )
vwnd=8
run=1
prefix=${vwnd}vms-r${run}
#prefix=1vm-r4

sleeptime=120

logdir=/root/qm/log
logfile=$logdir/${prefix}.logfile

# last minutes for ganglia metrics
#min=3min
min=5min

# download ganglia metrics
function download() {
        wget -O $prefix.src.net.png "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=c11node9&s=by+name&g=network_report"
        wget -O $prefix.src.net.csv "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=c11node9&s=by+name&g=network_report&csv=1"
        wget -O $prefix.src.cpu.png "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=c11node9&s=by+name&g=cpu_report"
        wget -O $prefix.src.cpu.csv "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=c11node9&s=by+name&g=cpu_report&csv=1"
        wget -O $prefix.dest.net.png "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=${dest}&s=by+name&g=network_report"
        wget -O $prefix.dest.net.csv "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=${dest}&s=by+name&g=network_report&csv=1"
        wget -O $prefix.dest.cpu.png "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=${dest}&s=by+name&g=cpu_report"
        wget -O $prefix.dest.cpu.csv "http://10.244.36.20/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=${dest}&s=by+name&g=cpu_report&csv=1"

	for node in master slave1 slave2 slave3
	do
		for resource in cpu network
		do
			#for filetype in png csv
			#do
	        		wget -O $prefix.$node.$resource.png "http://${ganglia}/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=${node}&s=by+name&g=${resource}_report"
	        		wget -O $prefix.$node.$resource.csv "http://${ganglia}/ganglia/graph.php?r=${min}&z=medium&c=Hadoop&h=${node}&s=by+name&g=${resource}_report&csv=1"
			#done
		done
	done
}

function domigrate() {
	sleep $sleeptime
	./qmigrate $vwnd $run ${rtt}ms $turn
}

ssh $router service tc delay $delay

# run workload: wordcount, terasort, kmeans, fuzzy kmeans, LDA
#ssh master "cd /root/mahout; ./run" &

if [ $rtt == 0 ]; then
	rtt=0.4
fi

#for vwnd in ${vwnds[@]}
#do
	#for run in ${runs[@]}
	#logsave $logfile time -p ./migrate $vwnd $run $rtt $turn
sleeptime=0
vwnd=8; turn=ping; domigrate
sleeptime=180
vwnd=7; turn=pong; domigrate
vwnd=6; turn=ping; domigrate
vwnd=5; turn=pong; domigrate
vwnd=4; turn=ping; domigrate
vwnd=3; turn=pong; domigrate
vwnd=2; turn=pong; domigrate
vwnd=1; turn=pong; domigrate

#done

#download

ssh $router service tc stop
